name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        command: mysqld --explicit_defaults_for_timestamp

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y lftp default-mysql-client

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --no-scripts

      - name: Prepare .env
        run: |
          cp .env.example .env
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=test_db" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          php artisan key:generate
          php artisan config:cache

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -u root -proot -e "SELECT 1" &> /dev/null; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 2
          done
          echo "MySQL did not become ready in time" >&2
          exit 1

      - name: Show existing tables (debug)
        run: mysql -h 127.0.0.1 -u root -proot -e "USE test_db; SHOW TABLES;"

      - name: Run migrations
        run: php artisan migrate --env=testing --force

      - name: Run tests
        run: php artisan test --env=testing --no-interaction
